@mixin form-field {
  width: 100%;
  padding: 0.5em 0.75em;
  border: 1px solid $color-blue-base;
  border-radius: 2px;
  background-color: $color-white-base;
  font-size: 1rem;
  height: 40px;
  line-height: normal;
  outline: none;

  &::placeholder {
    color: $color-black-lighten-50;
  }

  &:hover {
    border-color: $color-blue-base;
    box-shadow: 0 0 0 1px $color-blue-base;
  }

  &:focus {
    border-color: $color-teal-base;
    box-shadow: 0 0 0 1px $color-teal-base;
  }

  &:disabled {
    cursor: not-allowed;
    border-color: $color-black-lighten-50;
    background-color: $color-black-lighten-90;
    box-shadow: 0 0 0 1px $color-black-lighten-50;
  }

  &.error {
    border-color: $color-red-base;
    box-shadow: 0 0 0 1px $color-red-base;
  }
}

@mixin grid-column($prefix, $sizes) {
  @each $size, $width in $sizes {
    .col-#{$prefix}-#{$size} {
      width: $width;
    }
  }
}

@mixin media-query($breakpoint, $constraint: 'max-width') {
  @media screen and ($constraint: breakpoint($breakpoint)) {
    @content;
  }
}

// via https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6

// String Replace

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Font Face

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: '?',
    svg: '#' + str-replace($name, ' ', '_'),
  );

  $formats: (
    otf: 'opentype',
    ttf: 'truetype',
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// CSS Grid

@mixin grid-container(
  $columns,
  $rows: auto,
  $gap: 1em,
  $width: 95%,
  $maxwidth: 1500px,
  $max: auto,
  $iewidth: 20rem,
  $iemargin: 0.25em
) {
  display: grid;
  justify-content: center;
  margin: auto;
  grid-gap: $gap;
  width: $width;
  max-width: $maxwidth;

  @if (unitless($columns)) {
    grid-template-columns: repeat($columns, 1fr);
  } @else {
    grid-template-columns: repeat(auto-fill, minmax($columns, $max));
    grid-template-rows: repeat(auto-fill, minmax($rows, auto));
  }

  &.ie {
    > * {
      display: inline-block;
      width: $iewidth;
      margin: $iemargin;
    }
  }
}

@mixin anchor {
  border: none;
  padding: 0;
  background: transparent;
  margin: 0;
  color: $color-teal-base;
  text-transform: none;
  font-weight: inherit;
  font-size: inherit;
  font-family: inherit;
  text-decoration: underline;

  &:hover {
    background: $color-black-lighten-87;
    color: $color-teal-darken-25;
  }

  &:focus {
    outline-color: $color-teal-base;
    outline-style: solid;
    outline-width: 1px;
  }

  &:active {
    color: #005352;
  }

  &:visited {
    color: #005352;
    text-decoration: underline;
  }
}

@mixin visually-hidden {
  // Taken from a11y project
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap; /* added line */
}

@mixin input-label {
  display: inline-block;
  font-size: 1rem;
  font-weight: 600;
  line-height: 20px;
  letter-spacing: 0.3px;
  color: $color-black-base;

  &.disabled {
    color: $color-black-lighten-50;
  }

  &.invalid,
  &.error {
    color: $color-red-base;
  }

  &.hidden {
    @include visually-hidden;
  }
}
