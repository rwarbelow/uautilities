// tslint:disable:jsx-no-lambda
import * as React from 'react';
import { Keys } from '../../utilities/keyboard';
import classNames from '../../utilities/classnames';
import { accordion, accordionPanel, accordionOpen, accordionTitle } from './index.module.css.js';
var useState = React.useState;
var moveFocus = function (event) {
    var accordianNodes = Array.from(document.querySelectorAll("." + accordionTitle));
    var currentIndex = accordianNodes.findIndex(function (accordian) { return accordian === event.target; });
    var nextIndex = event.key === Keys.ArrowDown ? currentIndex + 1 : currentIndex - 1;
    if (accordianNodes[nextIndex]) {
        accordianNodes[nextIndex].focus();
    }
    else if (event.key === Keys.ArrowDown) {
        accordianNodes[0].focus();
    }
    else {
        accordianNodes[accordianNodes.length - 1].focus();
    }
};
export var Accordion = function (props) {
    var _a;
    var children = props.children, childrenClassName = props.childrenClassName, className = props.className, panelClassName = props.panelClassName, testid = props.testid, Title = props.title, titleClassName = props.titleClassName;
    var _b = useState(false), open = _b[0], setOpen = _b[1];
    var isTitleString = typeof Title === 'string';
    var buttonId = props.buttonId || (isTitleString ? Title : 'accordian') + "-button";
    var panelId = props.panelId || (isTitleString ? Title : 'accordian') + "-panel";
    var handleKeyDown = function (event) {
        switch (event.key) {
            case Keys.Enter:
            case Keys.Space:
                setOpen(!open);
                break;
            case Keys.ArrowDown:
            case Keys.ArrowUp:
                moveFocus(event);
                break;
        }
        event.preventDefault();
    };
    return (React.createElement("div", { className: classNames(accordion, (_a = {}, _a[accordionOpen] = open, _a), className), "data-testid": testid || 'accordion' },
        React.createElement("div", { "aria-controls": panelId, "aria-expanded": open, className: classNames(accordionTitle, titleClassName), "data-testid": '_accordion-title', id: buttonId, onClick: function () { return setOpen(!open); }, onKeyDown: handleKeyDown, role: 'button', tabIndex: 0 }, isTitleString ? React.createElement("span", null, Title) : React.createElement(Title, { isOpen: open })),
        React.createElement("div", { "aria-labelledby": buttonId, className: classNames(accordionPanel, childrenClassName, panelClassName), "data-testid": '_accordion-children', id: panelId, role: 'region' }, children)));
};
