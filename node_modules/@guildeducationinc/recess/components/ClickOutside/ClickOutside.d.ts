import * as React from 'react';
export interface ClickOutsideProps {
    /**
     * Event handler which fires when a click or touch event happens outside the wrapped
     * children
     */
    onOutsideClick: React.EventHandler<React.TouchEvent | React.MouseEvent>;
    /**
     * Boolean to determine if the component should actively listen to outside click/touch events.
     */
    active: boolean;
    /**
     * Container element to see if the click is within
     */
    container?: Element;
}
/**
 * The ClickOutside is a HOC to hander the use case when click or touch events that happen outside a given component
 * need to be listened to and acted upon.
 *
 * @example
 * ```tsx
 *  <ClickOutside
 *    onOutsideClick={() => console.log('Click happened outside of the wrapped component')}
 *    active={true}
 *  />
 *      <div> I am a container </div>
 *  </ClickOutside
 * ```
 */
export declare class ClickOutside extends React.Component<ClickOutsideProps> {
    componentDidMount(): void;
    componentWillUnmount(): void;
    private handleOutsideClick;
    render(): React.ReactNode;
}
