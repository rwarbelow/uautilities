var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { TextInput } from '../TextInput';
// TODO: Alternate icons to show/hide password
// import { EyeHide } from '../Icons/EyeHide';
import { EyeShow } from '../Icons';
import { passwordWrapper, toggleButton } from './index.module.css.js';
var Password = /** @class */ (function (_super) {
    __extends(Password, _super);
    function Password(props) {
        var _this = _super.call(this, props) || this;
        _this.toggleType = function () {
            _this.setState({ type: _this.state.type === 'text' ? 'password' : 'text' });
        };
        _this.state = {
            type: 'password',
        };
        return _this;
    }
    Password.prototype.render = function () {
        var _a = this.props, testid = _a.testid, innerRef = _a.innerRef, rest = __rest(_a, ["testid", "innerRef"]);
        var color = this.state.type === 'password' ? '#b2b2b2' : '#252626';
        return (React.createElement("div", { className: passwordWrapper, "data-testid": testid },
            React.createElement(TextInput, __assign({ type: this.state.type, testid: testid && testid + "-input", ref: innerRef }, rest)),
            React.createElement("button", { type: 'button', onClick: this.toggleType, className: toggleButton, "data-testid": testid && testid + "-button" },
                React.createElement(EyeShow, { size: 28, color: color, "data-testid": testid && testid + "-button-icon" }))));
    };
    return Password;
}(React.PureComponent));
export default React.forwardRef(function (props, ref) { return (React.createElement(Password, __assign({ innerRef: ref }, props))); });
