import * as React from 'react';
import classNames from '../../utilities/classnames';
import { errorText, globalBg, questionsErrorsContainer } from './index.module.css.js';
export var ErrorList = function (props) {
    var errors = props.errors, global = props.global, id = props.id, show = props.show;
    if (!show || (!Array.isArray(errors) && typeof errors !== 'string') || !errors.length) {
        return null;
    }
    var renderErrors = function () {
        if (Array.isArray(errors) && errors.length > 1) {
            return (React.createElement("ul", { className: classNames(global && globalBg) }, errors.map(function (error, index) { return (React.createElement("li", { key: index },
                React.createElement("span", { className: errorText }, error))); })));
        }
        else if (Array.isArray(errors) && errors.length === 1) {
            return React.createElement("span", { className: classNames(global && globalBg, errorText) }, errors[0]);
        }
        else if (typeof errors === 'string') {
            return React.createElement("span", { className: classNames(global && globalBg, errorText) }, errors);
        }
        else {
            // Unsupported prop type
            return null;
        }
    };
    return (React.createElement("div", { "aria-atomic": true, className: classNames(global && globalBg, questionsErrorsContainer), "data-testid": 'errorList', id: id, role: 'alert' }, renderErrors()));
};
