import classNames from '../../utilities/classnames';
import { contains } from 'ramda';
import * as React from 'react';
import { CheckboxInput } from '../CheckboxInput/CheckboxInput';
import ErrorList from '../ErrorList';
import { Tooltip } from '../Tooltip';
import { InfoCircle } from '../Icons';
import { AlignmentPositions } from '../../utilities/positionCalculator';
import * as styles from './index.module.css.js';
export var CheckboxGroup = function (props) {
    var _a;
    var className = props.className, _b = props.disabledValues, disabledValues = _b === void 0 ? [] : _b, errors = props.errors, groupLabel = props.groupLabel, handleSetMultiChecked = props.handleSetMultiChecked, additionalInfo = props.additionalInfo, isInvalid = props.isInvalid, name = props.name, readOnly = props.readOnly, _c = props.selectedValues, selectedValues = _c === void 0 ? [] : _c, values = props.values;
    var errorList = errors ? (Array.isArray(errors) ? errors : [errors]) : [];
    var hasError = isInvalid || errorList.length > 0;
    var tooltipId = additionalInfo && (groupLabel === null || groupLabel === void 0 ? void 0 : groupLabel.replace(' ', '-').toLowerCase()) + "-info";
    return (React.createElement("div", { className: classNames(styles.checkboxGroup, className) },
        React.createElement("div", { id: name },
            React.createElement("fieldset", null,
                React.createElement("legend", null,
                    React.createElement("div", { className: styles.labelWrapper },
                        React.createElement("span", { className: classNames((_a = {},
                                _a[styles.error] = hasError,
                                _a)) }, groupLabel),
                        additionalInfo && (React.createElement(Tooltip, { TooltipContent: additionalInfo, id: tooltipId, preferredPositions: [AlignmentPositions.topMiddle] },
                            React.createElement(InfoCircle, { size: 24, "aria-label": 'More info' }))))),
                values.map(function (_a) {
                    var value = _a.value, label = _a.label;
                    return (React.createElement(CheckboxInput, { key: name + "." + value, name: name, label: label, onChange: handleSetMultiChecked, value: value, checked: contains(value, selectedValues), disabled: readOnly || contains(value, disabledValues), "aria-invalid": hasError }));
                }))),
        React.createElement(ErrorList, { errors: errorList, show: errorList.length > 0, global: false })));
};
