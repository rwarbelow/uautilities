var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import classnames from '../../utilities/classnames';
import * as React from 'react';
import { Heading } from '../Typography/Heading';
import { cardHeader } from '../Card/index.module.css.js';
export var CardHeader = function (_a) {
    var className = _a.className, children = _a.children, is = _a.is, _b = _a.tag, tag = _b === void 0 ? 'h4' : _b, _c = _a.size, size = _c === void 0 ? '300' : _c, rest = __rest(_a, ["className", "children", "is", "tag", "size"]);
    var classes = classnames(cardHeader, className);
    return (React.createElement(Heading, __assign({ className: classes, size: size, tag: is || tag }, rest), children));
};
