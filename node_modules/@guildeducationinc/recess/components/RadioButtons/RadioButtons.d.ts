import * as React from 'react';
import { InputErrorProps, InputOnChange } from '../../types/InputTypes';
interface Value extends React.HTMLProps<HTMLInputElement> {
    value: string | number;
}
interface RadioButtonsProps extends InputErrorProps {
    /**
     * Array of objects used to create the radio inputs
     */
    values: Value[];
    /**
     * String to group radio inputs
     */
    name: string;
    /**
     * String for input label
     */
    groupLabel: string;
    /**
     * String or number that is the currently selected response
     */
    selectedValue?: string | number;
    /**
     * Required function used to update the setSelectedValue. Passes entire event as 1st and only arg
     */
    onChange?: InputOnChange;
    onFocus?: (e: React.FocusEvent) => void;
    onBlur?: (e: React.ChangeEvent) => void;
    /**
     * Boolean to disable all inputs. Individual inputs can be disabled via the values prop
     */
    readOnly?: boolean;
    type?: 'radio';
    /**
     * Additional information that is displayed in a tooltip next to the input label.
     */
    additionalInfo?: React.ComponentType | string;
}
export declare const RadioButtons: React.ForwardRefExoticComponent<RadioButtonsProps & React.RefAttributes<unknown>>;
export {};
