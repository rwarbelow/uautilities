import * as React from 'react';
import { LinkPropMapperType } from '../ExternalLink/ExternalLink';
interface LinkProps extends React.HTMLProps<HTMLAnchorElement>, LinkPropMapperType {
    /**
     * The path/url of the anchor tags destination.
     * Will use ExternalLink component if this points to an external link.
     */
    to: string;
    /**
     * Add if the consuming component or app isn't using react router.
     * Can use ExternalLink component instead of this prop for the same result.
     * and you want to render a basic anchor tag (instead of Nav from react-router)
     */
    useAnchor?: boolean;
    testid?: string;
    /**
     * A custom handler for the click event. Works just like a handler on an <a> tag -
     * calling e.preventDefault() will prevent the transition from firing, while e.stopPropagation() will prevent the event from bubbling.
     */
    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
}
/**
 * @deprecated [#1] since version 4.0.11 [#2] Use Button instead
 * [#3] Will be removed in version 5.0.
 *
 * Link Component. Visually identical to the ExternalLink component, but does uses react-router.
 *
 * Example Usage
 * ```jsx
 * <Link
 *   to={'/'}
 *   title="link button"
 *   active
 *   key={`HeaderNavItem-${1}`}
 *   useAnchor  // Added if the navigation isn't using react-router (basic anchor tag)
 *   iconName="ArrowLeft" // If you want an icon in front of the link
 * />
 *
 * <Link to={'/'} key={`navItem-${1}`} useAnchor>
 *  link with text child
 * </Link>
 * ```
 */
export declare const Link: React.SFC<LinkProps>;
export {};
