var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { TableRowCellAction } from '../TableRowCellAction';
import { TableRowCell } from '../TableRowCell';
import { tableRow, tableRowClickable } from './index.module.css.js';
import classnames from '../../utilities/classnames';
var TableRow = /** @class */ (function (_super) {
    __extends(TableRow, _super);
    function TableRow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderCell = function (row, column, i, rowIndex) {
            var _a = _this.props, rowActions = _a.rowActions, cellRenderer = _a.cellRenderer, flexBasisMultiplier = _a.flexBasisMultiplier;
            if (column.key === 'action') {
                return (React.createElement(TableRowCellAction, { flexBasisMultiplier: flexBasisMultiplier, actions: rowActions, flex: column.flex, key: "table-row-cell-" + i, maxWidth: column.maxWidth, minWidth: column.minWidth, type: column.type, rowIndex: rowIndex, row: row }));
            }
            else {
                return (React.createElement(TableRowCell, { flexBasisMultiplier: flexBasisMultiplier, columnKey: column.key, data: row[column.key], rowData: row, flex: column.flex, cellClick: _this.handleClick, key: "table-row-cell-" + i, cellRenderer: cellRenderer, maxWidth: column.maxWidth, minWidth: column.minWidth, wrapText: column.wrapText, type: column.type }));
            }
        };
        _this.handleClick = function (e) {
            var _a = _this.props, onRowClick = _a.onRowClick, row = _a.row;
            if (onRowClick) {
                onRowClick(e, row);
            }
        };
        _this.handleKeyPress = function (e) {
            var _a = _this.props, onRowClick = _a.onRowClick, row = _a.row;
            if (e.key === 'Enter' && onRowClick) {
                onRowClick(e, row);
            }
        };
        return _this;
    }
    TableRow.prototype.render = function () {
        var _this = this;
        var _a = this.props, row = _a.row, columns = _a.columns, onRowClick = _a.onRowClick, index = _a.index, className = _a.className;
        return (React.createElement("tr", { "data-testid": '_table-row', tabIndex: onRowClick ? 0 : undefined, className: classnames(onRowClick ? tableRowClickable : tableRow, className), role: 'row', onKeyPress: this.handleKeyPress }, columns.map(function (column, i) { return _this.renderCell(row, column, i, index); })));
    };
    return TableRow;
}(React.PureComponent));
export { TableRow };
