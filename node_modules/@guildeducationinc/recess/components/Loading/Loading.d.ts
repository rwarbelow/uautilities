import * as React from 'react';
declare type LoadingCompleteFn = () => void;
declare type LoadingResolver = (done: LoadingCompleteFn) => void;
export interface LoadingProps {
    className?: string;
    /**
     * Description of what is being loaded. 'Loading' will be appended to this description so do not include 'loading' here.
     *
     * @default Content
     */
    label?: string;
    /**
     * Whether the loader is visible. If true it will be visually hidden but still accessible to screen readers for optimum accessibility.
     *
     * @default false
     */
    loaded?: boolean;
    /**
     * Whether loader is displayed with opaque overlay on top of Loading children.
     *
     * @default false
     */
    overlay?: boolean;
    /**
     * Promise resolver method that sets loaded state to true when resolved.
     *
     */
    resolve?: Promise<any | unknown | void> | LoadingResolver;
    /**
     * Whether children of Loading should be rendered while loader is shown.
     *
     * @default false
     */
    showChildrenWhileLoading?: boolean;
}
export declare const Loading: React.FC<LoadingProps>;
export {};
