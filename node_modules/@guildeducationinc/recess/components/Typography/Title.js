import * as React from 'react';
import classnames from '../../utilities/classnames';
import { ThemeContext } from '../Theme';
import * as styles from './index.module.css.js';
// Remove sizeMap when removing deprecated `size` values
var sizeMap = {
    400: 4,
    300: 3,
    200: 2,
    100: 1,
};
export var Title = function (props) {
    var _a;
    var children = props.children, className = props.className, color = props.color, id = props.id, _b = props.size, size = _b === void 0 ? 1 : _b, testid = props.testid, theme = props.theme;
    var tag = (_a = props.tag) !== null && _a !== void 0 ? _a : 'span';
    var TagName = tag;
    var themeContext = React.useContext(ThemeContext);
    var computedTheme = theme || (themeContext === null || themeContext === void 0 ? void 0 : themeContext.theme) || 'light';
    var normalizedSize = typeof size === 'number' ? size : sizeMap[size];
    var classes = classnames(styles.title, styles["title" + normalizedSize], styles[computedTheme], className);
    var style = { color: color };
    return (React.createElement(TagName, { className: classes, "data-testid": testid, id: id, style: style }, children));
};
