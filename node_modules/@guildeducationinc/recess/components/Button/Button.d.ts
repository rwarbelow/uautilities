import * as React from 'react';
import { BaseButtonProps } from './BaseButton';
export declare type ButtonAppearance = 'primary' | 'outline' | 'text' | 'inlineLink';
export declare type ButtonIntent = 'default' | 'danger';
export declare type ButtomTheme = 'light' | 'dark';
export interface ButtonProps<P> extends BaseButtonProps<P> {
    /**
     * Appearance maps to a style. "primary" has a solid background,
     * "outline" has no background and a border, and "text" has no background and no border.
     *
     * The "inlineLink" style is deprecated and will be removed in the next major version.
     *
     * If you need the "inlineLink" style, use the more semantic "Anchor" component instead.
     */
    appearance?: 'primary' | 'outline' | 'text' | 'inlineLink';
    Component?: React.ComponentType<P>;
    /**
     * Passed to specify the intent of button to render
     *
     * @default 'default'
     */
    intent?: 'default' | 'danger';
    /**
     * @default 'light'
     */
    theme?: 'light' | 'dark';
}
export declare function Button<P>(props: React.PropsWithChildren<ButtonProps<P> & P>): JSX.Element;
export declare namespace Button {
    var displayName: string;
}
