import * as React from 'react';
import { IconTypes } from '../Icons/IconTypes';
export declare type IconButtonDirection = 'left' | 'right';
export interface BaseButtonProps<P> extends React.HTMLProps<HTMLButtonElement | HTMLAnchorElement> {
    testid?: string;
    /**
     * Callback function called on click of the button.
     */
    onClick?(e: React.MouseEvent<HTMLElement> | React.FormEvent<HTMLElement>): void;
    /**
     * Href that replaces an onClick function and turns button into a link
     */
    href?: string;
    /**
     * Custom class name for styling
     */
    className?: string;
    /**
     * Custom component to be rendered by button.
     */
    Component?: React.ComponentType<P>;
    /**
     * pass as a prop to the component to disable the button and the disabled styling.
     */
    disabled?: boolean;
    /**
     * passed to modify the button to use the full width of its parent wrapper.
     */
    fullWidth?: boolean;
    /**
     * passed to specify the appearnace of button to render (primary, outline, text).
     * @default 'primary'
     */
    iconDirection?: IconButtonDirection;
    /**
     * Passed to dictate which Icon to use in the button.
     */
    iconName?: IconTypes;
    /**
     * Use `forwardRef` if you need to pass a `ref` in
     */
    forwardRef?: any;
}
export declare function BaseButton<P>(props: React.PropsWithChildren<BaseButtonProps<P> & P>): JSX.Element;
export declare namespace BaseButton {
    var displayName: string;
}
