import * as React from 'react';
import { Option } from './MultiSelectList';
interface MultiSelectItemProps {
    /**
     * Option to be rendered
     */
    option: Option;
    /**
     * Optional method available for formatting option labels.
     */
    getOptionLabel?: (option: Option) => string;
    /**
     * Method returning a boolean that sets disabled state of item
     */
    isOptionDisabled?: (option: Option) => boolean;
    /**
     * Boolean saying if the option is selected
     */
    checked: boolean;
    /**
     * Trigger called when an option selection is toggled
     */
    toggleChecked: (args: {
        index: number;
        checked: boolean;
        option: Option;
    }) => void;
    /**
     * Boolean to track if the current item is selected. This is used for focus management
     */
    focused: boolean;
    /**
     * Required id that is used to set aria-activedescendant on the parent ul
     * Currently this is being set to the option label in `MultiSelectList`
     *
     * @default option.label
     */
    id: string;
    /**
     * The index of the item in the list of options
     */
    index: number;
    /**
     * Boolean for if this item is disabled
     */
    disabled?: boolean;
}
export declare const MultiSelectItem: React.MemoExoticComponent<(props: MultiSelectItemProps) => JSX.Element>;
export {};
