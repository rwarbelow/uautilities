import * as React from 'react';
export interface Option {
    disabled?: boolean;
    label: string;
    options?: Option[];
    /**
     * If the item is part of a nested list (it provides alternate styling)
     */
    subItem?: boolean;
    value: string | number;
}
interface MultiSelectListProps {
    /**
     * Refers to the id of the element (i.e. label) containing the listbox label.
     */
    ariaLabelledBy?: string;
    focusedIndex: number;
    focusedOption: string | number;
    getOptionLabel?: (option: Option) => string;
    handleKeyboardNav: (e: React.KeyboardEvent) => void;
    isOptionDisabled?: (option: Option) => boolean;
    label?: string;
    labelId?: string;
    noPanel?: boolean;
    onListClose: () => void;
    options: Option[];
    selectedValues: (string | number)[];
    toggleChecked: ({ index, checked, option, }: {
        index: number;
        checked: boolean;
        option: Option | Option[];
    }) => void;
    updateAllOptions: (key: string | number, open: boolean) => void;
}
export declare class MultiSelectList extends React.PureComponent<MultiSelectListProps> {
    componentWillUnmount(): void;
    render(): JSX.Element;
}
export {};
