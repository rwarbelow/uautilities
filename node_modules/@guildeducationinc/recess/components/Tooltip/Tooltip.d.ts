import * as React from 'react';
import { AlignmentPositions } from '../../utilities/positionCalculator';
export interface TooltipProps<P> extends BaseTooltipProps {
    /**
     * Unique id that gets set on tooltip content and is referenced by the element that triggers tooltip. Important for accessibility.
     */
    id: string;
    /**
     * The tooltip component content to be rendered.
     */
    TooltipContent: React.ComponentType<P> | string | null;
    /**
     * Tooltip  props that are passed through to the TooltipContent
     */
    tooltipProps?: P;
}
export interface BaseTooltipProps {
    /**
     * The delay time between when a user mouse overs the target and the tooltip displays
     *
     * @default 250ms
     */
    openDelay?: number;
    /**
     * The delay time between when a user hovers out of the target and when the tooltip disappears
     *
     * @default 250ms
     */
    closeDelay?: number;
    /**
     * Array of preferred alignment posiitions for the popover relative to the target
     */
    preferredPositions?: AlignmentPositions[];
}
interface TooltipState {
    /**
     * Internal state used to track if the tooltip is visible or not
     */
    show: boolean;
    /**
     * Internal state that stores the reference to the DOM node of the target
     * (element that when hovered of/out of triggers the tooltip to show/hide)
     */
    target: Element | null;
}
export declare class Tooltip<P> extends React.PureComponent<TooltipProps<P>, TooltipState> {
    private openTimer;
    private closeTimer;
    constructor(props: TooltipProps<P>);
    componentDidMount(): void;
    private renderChildren;
    private renderTooltipContent;
    private showTooltip;
    private hideTooltip;
    private closeTooltip;
    render(): JSX.Element;
}
export {};
