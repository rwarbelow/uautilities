import * as React from 'react';
import { InputErrorProps, InputOnChange } from '../../types/InputTypes';
import { InputAddonProps } from '../InputAddon/InputAddon';
export declare type TextInputMaskArray = (string | RegExp)[];
export interface TextInputProps extends InputErrorProps, InputAddonProps, React.InputHTMLAttributes<HTMLInputElement> {
    className?: string;
    /**
     * Additional information that is displayed in a tooltip next to the input label.
     */
    additionalInfo?: React.ComponentType | string;
    /**
     * Controls whether or not the label is rendered.
     * You should still provide a value the `label` prop even if you don't want it to be rendered for accessibility reasons.
     * If `hideLabel` is true then the `aria-label` value on the input will be set to the value of the `label` prop.
     *
     * @default false
     */
    hideLabel?: boolean;
    /**
     * Controls whether label is displayed inline with the input
     *
     * @default false
     */
    inlineLabel?: boolean;
    label?: string;
    /**
     * Formats value of the input.
     * Masks for phone and SSN are available, or you can set your own custom mask
     */
    mask?: 'phone' | 'ssn' | TextInputMaskArray | ((value: string) => TextInputMaskArray);
    onChange?: InputOnChange;
    testid?: string;
    type?: 'text' | 'password' | 'number' | 'search' | 'tel' | 'email';
    innerRef?: React.RefObject<HTMLInputElement>;
}
export declare const TextInput: React.ForwardRefExoticComponent<TextInputProps & React.RefAttributes<HTMLInputElement>>;
