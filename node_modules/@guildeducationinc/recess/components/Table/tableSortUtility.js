import { parse } from 'date-fns';
var sorter = function (rows, key, type, direction) {
    if (type === void 0) { type = undefined; }
    if (direction === void 0) { direction = 'desc'; }
    if (!Array.isArray(rows) || !rows.length) {
        return rows;
    }
    var newRows = rows.sort(function (objA, objB) {
        var a = objA[key];
        var b = objB[key];
        if (type === 'id' || type === 'number' || type === 'currency') {
            a = Number((a + '').replace('$', ''));
            b = Number((b + '').replace('$', ''));
            if (isNaN(a)) {
                a = 0;
            }
            if (isNaN(b)) {
                b = 0;
            }
            return a - b;
        }
        else if (type === 'date') {
            a = parse(a);
            b = parse(b);
            return a - b;
        }
        else {
            if (a < b) {
                return -1;
            }
            if (a > b) {
                return 1;
            }
            return 0;
        }
    });
    return direction === 'asc' ? newRows.reverse() : newRows;
};
var sortNumbers = function (rows, key, direction) {
    if (direction === void 0) { direction = 'desc'; }
    return sorter(rows, key, 'number', direction);
};
var sortIds = function (rows, key, direction) {
    if (direction === void 0) { direction = 'desc'; }
    return sorter(rows, key, 'id', direction);
};
var sortCurrency = function (rows, key, direction) {
    if (direction === void 0) { direction = 'desc'; }
    return sorter(rows, key, 'currency', direction);
};
var sortText = function (rows, key, direction) {
    if (direction === void 0) { direction = 'desc'; }
    return sorter(rows, key, 'text', direction);
};
var sortDates = function (rows, key, direction) {
    if (direction === void 0) { direction = 'desc'; }
    return sorter(rows, key, 'date', direction);
};
export var tableSortUtility = {
    sortCurrency: sortCurrency,
    sortDates: sortDates,
    sorter: sorter,
    sortIds: sortIds,
    sortNumbers: sortNumbers,
    sortText: sortText,
};
