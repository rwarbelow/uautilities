import * as React from 'react';
export interface StepperLinkProps<P> {
    testid?: string;
    /**
     * The text for the link
     */
    label: string;
    /**
     * Sets a check mark at the end of the link
     */
    completed?: boolean;
    /**
     * Flags the link as active with a teal bar
     */
    active?: boolean;
    /**
     * Href that replaces an onClick function and turns button into a link
     */
    href?: string;
    /**
     * A custom component to render in place of a regular <a> tag. A common use case fore this is a `react-router-dom` Link component for client side navigation.
     */
    Component?: React.ComponentType<P>;
    /**
     * pass as a prop to the component to disable the button and the disabled styling.
     */
    disabled?: boolean;
    /**
     * Callback function called on click of the button.
     */
    onClick?(e: React.MouseEvent<HTMLElement> | React.FormEvent<HTMLElement>): void;
}
export declare function StepperLink<P>({ label, completed, active, children, ...rest }: React.PropsWithChildren<StepperLinkProps<P> & P>): JSX.Element;
