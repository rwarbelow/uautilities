var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { Heading } from '../Typography/Heading';
import { stepperHeader } from './index.module.css.js';
import classNames from '../../utilities/classnames';
export var StepperHeader = function (_a) {
    var children = _a.children, className = _a.className, _b = _a.size, size = _b === void 0 ? '400' : _b, _c = _a.tag, tag = _c === void 0 ? 'h3' : _c, headingProps = __rest(_a, ["children", "className", "size", "tag"]);
    if (!children) {
        return null;
    }
    var props = __assign({ size: size,
        tag: tag, className: classNames(stepperHeader, className) }, headingProps);
    return React.createElement(Heading, __assign({}, props), children);
};
