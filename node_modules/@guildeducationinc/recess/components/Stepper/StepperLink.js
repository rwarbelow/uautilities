var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import classNames from '../../utilities/classnames';
import { stepperLinkActive, stepperLink } from './index.module.css.js';
import { Button } from '../Button';
export function StepperLink(_a) {
    var label = _a.label, completed = _a.completed, active = _a.active, children = _a.children, rest = __rest(_a, ["label", "completed", "active", "children"]);
    var hasActiveChild = false;
    if (children) {
        React.Children.forEach(children, function (child) {
            if (child.props && child.props.active === true) {
                hasActiveChild = true;
            }
        });
    }
    var buttonProps = __assign({ className: classNames(stepperLink, (active || hasActiveChild) && stepperLinkActive), appearance: 'text', fullWidth: true, iconName: completed ? 'Check' : undefined }, rest);
    return (React.createElement("li", null,
        React.createElement(Button, __assign({}, buttonProps),
            React.createElement("span", null, label)),
        (children && React.createElement("ul", null, children)) || null));
}
