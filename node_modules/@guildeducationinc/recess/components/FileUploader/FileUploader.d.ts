import * as React from 'react';
import { DropEvent, DropzoneOptions } from 'react-dropzone';
export interface FileUploaderProps {
    /**
     * Files that have been successfully added via `onAdd`
     *
     * @default []
     */
    acceptedFileList?: React.ReactNode;
    /**
     * Optional className added to dropzone element
     */
    className?: string;
    /**
     * Text displayed when dropzone is active. i.e. When files are actively being dragged in.
     *
     * @default Drop the files here
     */
    dragText?: string;
    /**
     * Props passed to react-dropzone
     *
     * @default { maxSize: 10485760 (10mb), accept: undefined, multiple: false }
     */
    dropZoneProps?: DropzoneOptions;
    /**
     * Text displayed within dropzone
     *
     * @default Drag here or browse to upload
     */
    dropZoneText?: string;
    /**
     * Array of errors.
     */
    errors?: string[];
    /**
     * Label for an optional example document.
     */
    exampleLabel?: string;
    /**
     * URL of an optional example document.
     */
    exampleUrl?: string;
    /**
     * Additional information that is displayed in a tooltip next to the input label.
     */
    additionalInfo?: React.ComponentType | string;
    /**
     * Whether label is visually hidden. Be sure to always provide value for label.
     *
     * @default false
     */
    hideLabel?: boolean;
    id?: string;
    /**
     * Descriptive label of file uploader. Should always be defined for optimum accessibility.
     */
    label?: string;
    name?: string;
    /**
     * Callback for when files are successfully added
     */
    onAdd: (file: File, event: DropEvent) => void;
    /**
     * Callback for when files are rejected
     */
    onReject?: (files: RejectedFile[], event: DropEvent) => void;
    /**
     * Files that have been rejected via onReject callback.
     */
    rejectedFileList?: React.ReactNode;
    /**
     * Detail what file types are supported.
     */
    supportedText?: string;
    /**
     * @default fileUploader
     */
    testid?: string;
}
export interface RejectedFile extends File {
    error?: string;
}
export declare const FileUploader: React.FC<FileUploaderProps>;
