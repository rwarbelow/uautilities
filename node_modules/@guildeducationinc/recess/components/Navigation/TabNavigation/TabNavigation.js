var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
/* eslint-disable prettier/prettier */
/* eslint-disable react/display-name */
import * as React from 'react';
import classnames from '../../../utilities/classnames';
import { ThemeContext } from '../../Theme';
import * as styles from './index.module.css.js';
var TabNavigation = /** @class */ (function (_super) {
    __extends(TabNavigation, _super);
    function TabNavigation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TabNavigation.prototype.render = function () {
        var _a;
        var _b = this.props, ariaLabel = _b.ariaLabel, children = _b.children, className = _b.className, testid = _b.testid, theme = _b.theme, vertical = _b.vertical;
        var orientation = vertical ? 'vertical' : 'horizontal';
        var computedTheme = theme || ((_a = this.context) === null || _a === void 0 ? void 0 : _a.theme) || 'light';
        return (React.createElement("nav", { "aria-label": ariaLabel, className: classnames(styles.tabNav, className), "data-testid": testid, ref: this.props.forwardedRef },
            React.createElement("ul", { className: classnames(styles[computedTheme], styles.navTabList, styles[orientation]) }, children)));
    };
    return TabNavigation;
}(React.PureComponent));
export { TabNavigation };
TabNavigation.contextType = ThemeContext;
