import * as React from 'react';
export interface TabLinkProps<T> extends React.HTMLProps<HTMLAnchorElement> {
    className?: string;
    children: string;
    /**
     * This prop indicates if the link represents the current page. This prop **should** be added when necessary for
     * accessibility purposes.
     * Defaults to false
     *
     * @default false
     */
    current?: boolean;
    /**
     * Use an `href` attribute if you'd like the link element to be a `a` tag.
     */
    href?: string;
    /**
     * Click handler for TabLink
     *
     */
    onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;
    rel?: string;
    target?: '_blank' | '_self' | '_parent' | '_top';
    testid?: string;
    /**
     * Mirroring the `React Router Link` API, use a `to` prop if you'd like the link element to be a
     * `Link` component.
     */
    Component?: React.ComponentType<T>;
}
export declare function TabLink<T>(props: React.PropsWithChildren<TabLinkProps<T> & T>): JSX.Element;
export declare namespace TabLink {
    var displayName: string;
}
