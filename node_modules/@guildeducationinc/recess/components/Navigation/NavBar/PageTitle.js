import * as React from 'react';
import { Heading } from '../../Typography';
import { pageTitle, backButtonWrapper, backButtonContainer, subNavContainer, pageTitleWrapper, stackNavigator, subnavWrapper, } from './index.module.css.js';
import Button from '../../Button';
import { BreadcrumbLink } from '../Breadcrumbs';
import { Breadcrumbs } from '../Breadcrumbs/Breadcrumbs';
import classnames from '../../../utilities/classnames';
export var PageTitle = function (_a) {
    var children = _a.children, onBackOptions = _a.onBackOptions, _b = _a.routes, routes = _b === void 0 ? [] : _b, tag = _a.tag, testid = _a.testid, title = _a.title;
    return (React.createElement("div", { "data-testid": testid, className: pageTitleWrapper },
        onBackOptions ? (React.createElement("div", { className: classnames(stackNavigator, backButtonWrapper) },
            React.createElement("div", { className: backButtonContainer },
                React.createElement(Button, { appearance: 'text', iconDirection: 'left', iconName: 'ArrowLeft', to: onBackOptions.to, href: onBackOptions.href, onClick: onBackOptions.onBack }, onBackOptions.title || 'Back')))) : null,
        !onBackOptions && routes.length > 0 ? (React.createElement("div", { className: stackNavigator },
            React.createElement(Breadcrumbs, { testid: 'page-nav-breadcrumbs', className: classnames(backButtonContainer) }, routes.map(function (route) { return (React.createElement(BreadcrumbLink, { key: route.name, current: route.current, href: route.href }, route.name)); })))) : null,
        title && (React.createElement(Heading, { size: '600', tag: tag, className: pageTitle }, title)),
        children && (React.createElement("div", { className: subnavWrapper },
            React.createElement("div", { className: subNavContainer }, React.Children.only(children))))));
};
PageTitle.displayName = 'PageTitle';
