import React from 'react';
import Link from '../../Link';
import { subNav, subNavWrapper, subContainer, backBtnWrapper, xlBorderBottom, subNavItem, active as activeStyle, borderPlaceholder, } from './index.module.css.js';
import classNames from '../../../utilities/classnames';
import { Deprecated } from '../../Deprecated';
import { ArrowLeft } from '../../Icons';
var backButton = function (_a) {
    var to = _a.to, label = _a.label, onClick = _a.onClick, useAnchor = _a.useAnchor, index = _a.index;
    return (React.createElement("div", { key: "SubNavItem-" + index, className: backBtnWrapper },
        React.createElement(Link, { to: to, className: 'link icon', tabIndex: '0', useAnchor: useAnchor, onClick: onClick },
            React.createElement(ArrowLeft, null),
            label)));
};
export function SubNavigation(props) {
    if (props.navItems.length <= 1)
        return null;
    return (React.createElement(Deprecated, { currentComponent: 'SubNavigation', newComponent: 'TabNavigation' },
        React.createElement("nav", { className: subNav, "data-testid": props && props.testid },
            React.createElement("div", { className: classNames('wrapper', subNavWrapper), style: { maxWidth: 'initial' } },
                React.createElement("div", { className: xlBorderBottom }),
                React.createElement("div", { className: subContainer, "data-testid": 'sub-nav' }, props.navItems.map(function (_a, index) {
                    var _b, _c;
                    var to = _a.to, label = _a.label, useAnchor = _a.useAnchor, active = _a.active, onClick = _a.onClick, isBackButton = _a.isBackButton, testid = _a.testid;
                    return isBackButton ? (backButton({ to: to, label: label, onClick: onClick, useAnchor: useAnchor, index: index })) : (React.createElement("div", { className: classNames(subNavItem, (_b = {}, _b[activeStyle] = active, _b)), key: "SubNavItem-" + index },
                        React.createElement("div", null),
                        React.createElement(Link, { testid: testid, to: to, onClick: onClick, useAnchor: useAnchor, className: classNames((_c = {}, _c[activeStyle] = active, _c), 'secondary') }, label),
                        React.createElement("div", { className: borderPlaceholder })));
                })),
                React.createElement("div", { className: xlBorderBottom })))));
}
