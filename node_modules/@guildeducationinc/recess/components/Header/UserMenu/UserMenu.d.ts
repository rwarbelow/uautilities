export interface UserMenuItem {
    /**
     * Boolean representing if the link is currently active
     */
    active: boolean;
    /**
     * String to be used as the content of the Link
     */
    label: string;
    /**
     * Function to be used as a callback when the Link is clicked
     */
    onClick: () => void;
    /**
     * String that is the path to take the user to upon click
     */
    to: string;
    /**
     * Boolean that will cause an ExternalLink to be rendered instead of a NavLink
     */
    useAnchor: boolean;
}
export interface UserMenuProps {
    /**
     * Boolean for backwawards compatability. If true, the UserMenu will close on a click outside of the element
     */
    closeOnOutsideClick?: boolean;
    /**
     * String that is the first name of the authed user
     */
    firstName?: string;
    /**
     * Boolean that represents if there is an authed user or not
     */
    isLoggedIn?: boolean;
    /**
     * String that represents the sign in url. Only used if !isLoggedIn
     */
    logInLink?: string;
    /**
     * Array of UserMenuItem
     */
    menuItems?: Readonly<UserMenuItem>[];
    /**
     * Function to be used as callback for when the Link to sign in is clicked
     */
    onLogInclick?: () => void;
    /**
     * Function to be used as callback for when the Button to sign up is clicked
     */
    onSignUpClick?: () => void;
    /**
     * String to be used as href for sign up Button
     */
    signUpLink?: string;
}
export declare const UserMenu: ({ closeOnOutsideClick, isLoggedIn, logInLink, signUpLink, ...props }: Readonly<UserMenuProps>) => JSX.Element;
