var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import classNames from '../../../utilities/classnames';
import useOutsideClick from '../../../utilities/customHooks/useOutsideClick';
import { Button } from '../../Button';
import Link from '../../Link';
import { ChevronDown, ChevronUp } from '../../Icons';
import { userMenu, navUserNameWrapper, navUserName, userMenuNav, closed, userMenuNavItem, } from './index.module.css.js';
/* eslint-disable jsx-a11y/click-events-have-key-events */
var useRef = React.useRef, useState = React.useState;
export var UserMenu = function (_a) {
    var _b;
    var _c = _a.closeOnOutsideClick, closeOnOutsideClick = _c === void 0 ? false : _c, _d = _a.isLoggedIn, isLoggedIn = _d === void 0 ? false : _d, _e = _a.logInLink, logInLink = _e === void 0 ? 'https://www.guildeducation.com/users/sign_in' : _e, _f = _a.signUpLink, signUpLink = _f === void 0 ? 'https://www.guildeducation.com/users/sign_up' : _f, props = __rest(_a, ["closeOnOutsideClick", "isLoggedIn", "logInLink", "signUpLink"]);
    var menuItems = props.menuItems, onSignUpClick = props.onSignUpClick, onLogInclick = props.onLogInclick, firstName = props.firstName;
    var welcomeString = firstName ? "Hello, " + firstName + "!" : 'Hello!';
    var _g = useState(false), open = _g[0], setOpen = _g[1];
    var ref = useRef(null);
    if (closeOnOutsideClick) {
        useOutsideClick(ref, function () { return setOpen(false); });
    }
    return isLoggedIn ? (React.createElement("div", { className: userMenu, ref: ref },
        React.createElement("button", { "aria-label": 'User Menu', className: navUserNameWrapper, "data-testid": 'user-menu', onClick: function () { return setOpen(!open); }, tabIndex: 0 },
            React.createElement("span", { className: navUserName }, welcomeString),
            open ? React.createElement(ChevronUp, { color: '#01A8A5', size: 24 }) : React.createElement(ChevronDown, { color: '#01A8A5', size: 24 })),
        React.createElement("nav", { className: classNames(userMenuNav, (_b = {}, _b[closed] = !open, _b)), "data-testid": '_user-menu-nav' }, menuItems.map(function (_a, index) {
            var to = _a.to, label = _a.label, useAnchor = _a.useAnchor, active = _a.active, onClick = _a.onClick;
            return (React.createElement(Link, { active: active, className: userMenuNavItem, key: "UserMenuItem-" + index, onClick: onClick, to: to, useAnchor: useAnchor }, label));
        })))) : (React.createElement("div", { className: userMenu, "data-testid": '_user-menu-nav-logged-out' },
        React.createElement(Link, { to: logInLink, onClick: onLogInclick, "data-testid": '_login-button' }, "Sign In"),
        React.createElement(Button, { className: 'button primary', href: signUpLink, onClick: onSignUpClick, testid: 'signup-button' }, "Sign Up")));
};
